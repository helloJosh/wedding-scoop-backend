name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: build and cp to target script
        run: |
          #!/bin/bash

          set -e
          PARENT_MODULE_DIR=$(pwd)
          
          # 하위 모듈 경로 설정
          AUTH_MODULE="$PARENT_MODULE_DIR/auth"
          WEB_MODULE="$PARENT_MODULE_DIR/scoop"
          
          # 상위 모듈의 타겟 디렉토리 설정
          PARENT_TARGET_DIR="$PARENT_MODULE_DIR/target"
          
          # Maven clean package 실행
          echo "Running Maven clean package..."
          mvn clean package
          
          # 상위 모듈의 target 디렉토리 생성
          echo "Creating target directory in parent module..."
          
          # 하위 모듈 JAR 파일 복사
          echo "Copying JAR files to parent module target directory..."
          
          if [ -f "$AUTH_MODULE/target/"*.jar ]; then
          cp "$AUTH_MODULE/target/"*.jar "$PARENT_TARGET_DIR/auth"
          echo "Copied consumer JAR from $AUTH_MODULE/target."
          else
          echo "No JAR found in $AUTH_MODULE/target."
          fi
          
          if [ -f "$WEB_MODULE/target/"*.jar ]; then
          cp "$WEB_MODULE/target/"*.jar "$PARENT_TARGET_DIR/scoop"
          echo "Copied producer JAR from $WEB_MODULE/target."
          else
          echo "No JAR found in $WEB_MODULE/target."
          fi
          
          echo "All JAR files copied to $PARENT_TARGET_DIR."


      - name: Delete file in server
        run: sudo rm -rf /home/ubuntu/scoop-backend

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOSTNAME }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./target"
          target: "/home/ubuntu/scoop-backend"

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/ubuntu/scoop-backend/auth

            sudo docker stop auth || true
            sudo docker rm auth || true
            sudo docker build -t auth .
            sudo docker run -d -p 8080:8080 --name auth

            cd /home/ubuntu/scoop-backend/scoop
            
            sudo docker stop scoop || true
            sudo docker rm scoop || true
            sudo docker build -t scoop .
            sudo docker run -d -p 8081:8081 --name scoop

